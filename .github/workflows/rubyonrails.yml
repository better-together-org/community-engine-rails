name: "Ruby on Rails CI"

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  rspec:
    runs-on: ubuntu-latest

    # ── Handle failures per-matrix entry ────────────────────────────────────────
    continue-on-error: ${{ matrix.allowed_failure }}

    strategy:
      fail-fast: false              # don’t cancel other matrix jobs early
      matrix:
        include:
          # ✅ REQUIRED: must pass
          - ruby: '3.4.4'
            rails: '7.1.5.1'
            allowed_failure: false

          # ⚠️  ALLOWED TO FAIL (prep work for upgrades)
          - ruby: '3.4.4'
            rails: '7.2'
            allowed_failure: true

          - ruby: '3.4.4'
            rails: '8.0'
            allowed_failure: true

    env:
      RAILS_ENV: test
      DATABASE_URL: "postgis://rails:password@localhost:5432/rails_test"
      ES_HOST:  "http://localhost"
      RAILS_VERSION: ${{ matrix.rails }}
    environment: test

    services:
      postgres:
        image: postgis/postgis:latest
        ports: [ "5432:5432" ]
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
      elasticsearch:
        image: elasticsearch:7.17.23
        ports: [ "9200:9200" ]
        env:
          node.name: elasticsearch
          cluster.name: better-together-es
          discovery.seed_hosts: elasticsearch
          discovery.type: single-node
          bootstrap.memory_lock: "true"
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby/toolchain
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: ${{ matrix.rails == '7.1.5.1' }}

      - name: Update Rails for upgrade tracks
        if: matrix.allowed_failure
        run: |
          bundle config set deployment false
          bundle update rails --conservative
          bundle install

      - name: Prepare DB schema
        run: rm -f spec/dummy/tmp/pids/server.pid && cd spec/dummy && bundle exec rails db:schema:load

      - name: Run RSpec
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: rm -f spec/dummy/tmp/pids/server.pid && bundle exec rspec

  # ── Style & Security jobs stay unchanged ─────────────────────────────────────
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundle exec rubocop --parallel

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundle binstubs bundler-audit --force
      - run: bundle exec bundler-audit --update
      - run: bundle exec brakeman -q -w2
