<%# app/views/better_together/setup_wizard/step_one.html.erb %>

<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-md-6">
      <h1 class="text-center mb-4">Setup Your Better Together Community Platform</h1>
      <p class="text-center mb-4">Fill out the details below to set up your platform.</p>

      <% if @form.errors.size > 0 %>
        <div id="error_explanation">
          <h2><%= pluralize(@form.errors.size, "error") %> prevented this platform from being saved:</h2>
          <ul>
          <% @form.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
          </ul>
        </div>
      <% end %>
      
      <%= form_for @form, url: setup_wizard_create_host_platform_path, method: :post, class: 'needs-validation', novalidate: true do |f| %>
        <div class="mb-3">
          <%= f.label :name, class: 'form-label' %>
          <%= f.text_field :name, class: 'form-control', required: true %>
        </div>

        <div class="mb-3">
          <%= f.label :description, class: 'form-label' %>
          <%= f.text_area :description, class: 'form-control', rows: 3, required: true %>
        </div>

        <div class="mb-3">
          <%= f.label :url, class: 'form-label' %>
          <%= f.text_field :url, class: 'form-control', required: true %>
        </div>

        <div class="mb-3">
          <%= f.label :privacy, class: 'form-label' %>
          <%= f.select :privacy, BetterTogether::Platform.privacies.keys.map { |privacy| [privacy.humanize, privacy] }, {}, { class: 'form-select', required: true } %>
        </div>

        <div class="mb-3">
          <%= f.label :time_zone, class: 'form-label' %>
          <%= f.time_zone_select :time_zone, ActiveSupport::TimeZone.all, {}, { class: 'form-select', id: 'time_zone_select' } %>
        </div>

        <%= f.submit 'Next Step', class: 'btn btn-primary' %>
      <% end %>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Get the user's time zone using the Intl API
    var userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;
    console.log("User's Time Zone:", userTimeZone);

    // Find the time zone select element
    var timeZoneSelect = document.getElementById('time_zone_select');

    if (timeZoneSelect) {
      // Set the select element to match the user's time zone
      for (var i = 0; i < timeZoneSelect.options.length; i++) {
        if (timeZoneSelect.options[i].value === userTimeZone) {
          timeZoneSelect.selectedIndex = i;
          break;
        }
      }
    }
  });
</script>


