/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require leaflet-gesture-handling.min
 *= require_self
 */

@import 'theme';

// Import Bootstrap and Font Awesome

@import 'bootstrap';
@import 'cards';
@import 'devise';
@import 'font-awesome';
@import 'actiontext';
@import 'contact_details';
@import 'content_blocks';
@import 'conversations';
@import 'forms';
@import 'image-galleries';
@import 'maps';
@import 'metrics';
@import 'navigation';
@import 'notifications';
@import 'profiles';
@import 'simple_calendar';
@import 'share';
@import 'sidebar_nav';
@import 'trix-extensions/richtext';

// Styles that use the variables
.text-opposite-theme {
  color: $text-opposite-theme-color; /* Use the defined variable */
}

@media (prefers-color-scheme: dark) {
  .text-opposite-theme {
    color: $dark-text-color;
  }
}

.background-opposite-theme {
  background-color: $background-opposite-theme-color;
  color: $text-opposite-theme-color;
}

@media (prefers-color-scheme: dark) {
  .background-opposite-theme {
    background-color: $dark-background-color;
    color: $dark-text-color;
  }
}


.highlight-translation-missing span.translation_missing {
  background: #e1b1ed;
}

.row > label {
  padding-left: 0;
  padding-right: 0;
}

#flash_messages {
  position: relative;
}

.wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100vh; /* Ensure the wrapper takes full height */
}

.content {
  flex: 1; /* Allow the main content to grow and take up remaining space */
  position: relative;
}

@keyframes flip {
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(180deg);
  }
  100% {
    transform: rotateY(360deg);
  }
}

.spin-horizontal {
  animation: flip 1s linear infinite;
}

